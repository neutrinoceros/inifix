name: CI
on:
  push:
    branches:
    - main
  pull_request:
    paths-ignore:
    - README.md
    - CHANGELOG.md

concurrency:
  # auto-cancel any in-progress job *on the same branch*
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit-tests:
    strategy:
      matrix:
        os:
        - ubuntu-latest
        python-version:
        - '3.11'
        - '3.12'
        - '3.13'
        include:
        - os: ubuntu-20.04
          python-version: 3.10.0
          label: oldestdeps
        - os: macos-latest
          python-version: 3.10.0
        - os: macos-latest
          python-version: '3.13'
        - os: windows-latest
          python-version: 3.10.0
        - os: windows-latest
          python-version: '3.13'

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: astral-sh/setup-uv@1edb52594c857e2b5b13128931090f0640537287 # v5.3.0
      with:
        python-version: ${{ matrix.python-version }}
        enable-cache: true
        prune-cache: false
        cache-suffix: covcheck

    - if: ${{ matrix.label == 'oldestdeps' }}
      run: echo "UV_RESOLUTION=lowest-direct" >> $GITHUB_ENV

    - name: Run tests (without coverage)
      if: ${{ ! startswith( matrix.os, 'ubuntu' ) }}
      shell: bash  # for windows portability
      run: |
        uv run --frozen --no-editable --group test \
          pytest --color=yes

    - name: Run tests (with coverage)
      if: ${{ startswith( matrix.os, 'ubuntu' ) }}
      run: |
        uv run --group covcheck \
          coverage run --parallel-mode -m pytest --color=yes

    - name: Upload coverage data
      # only using reports from ubuntu because
      # combining reports from multiple platforms is tricky (or impossible ?)
      if: ${{ startswith( matrix.os, 'ubuntu' ) }}
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: inifix_coverage_data-${{ matrix.os }}-${{ matrix.python-version }}
        path: .coverage.*
        if-no-files-found: ignore
        include-hidden-files: true

  concurrency-tests:
    strategy:
      matrix:
        os:
        - ubuntu-latest
        python-version:
        - 3.10.0
        - '3.13'
        - 3.13t

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: astral-sh/setup-uv@1edb52594c857e2b5b13128931090f0640537287 # v5.3.0
      with:
        python-version: ${{ matrix.python-version }}
        enable-cache: true
        prune-cache: false
        cache-suffix: concurrency
    - run: uv sync --frozen --no-editable --group concurrency
    - run: |
        uv run --no-sync \
          pytest --color=yes --count 100 -k concurrency

  coverage:
    name: Combine & check coverage
    runs-on: ubuntu-latest
    needs: unit-tests

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: astral-sh/setup-uv@1edb52594c857e2b5b13128931090f0640537287 # v5.3.0
      with:
        python-version: '3.13'
        enable-cache: true
        prune-cache: false
        cache-suffix: covcheck
    - run: uv sync --group covcheck

    - uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
      with:
        pattern: inifix_coverage_data-*
        merge-multiple: true

    - name: Check coverage
      run: |
        coverage combine
        coverage html --skip-covered --skip-empty
        coverage report --fail-under=100

    - name: Upload HTML report if check failed.
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: inifix_coverage_report
        path: htmlcov
      if: ${{ failure() }}

  type-check:
    strategy:
      matrix:
        python-version:
        - '3.10'
        - '3.13'

    runs-on: ubuntu-latest
    name: type check

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: astral-sh/setup-uv@1edb52594c857e2b5b13128931090f0640537287 # v5.3.0
      with:
        python-version: ${{ matrix.python-version }}
        enable-cache: true
        prune-cache: false
        cache-suffix: typecheck

    - run: uv sync --frozen --no-editable --group typecheck
    - name: Typecheck source code (mypy)
      run: mypy src lib/inifix/src typechecks
    - name: Typecheck source code (pyright)
      run: pyright src lib/inifix/src typechecks
    - name: Typecheck source code (basedbpyright)
      run: basedpyright src lib/inifix/src typechecks
    - name: Verify Types (pyright)
      run: pyright --verifytypes inifix
    - name: Verify Types (basedpyright)
      run: basedpyright --verifytypes inifix

  optimized_python:
    runs-on: ubuntu-latest
    name: optimized Python

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-optimized
      cancel-in-progress: true

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0

    - uses: astral-sh/setup-uv@1edb52594c857e2b5b13128931090f0640537287 # v5.3.0
      with:
        python-version: '3.13'
        enable-cache: true
        prune-cache: false
        cache-suffix: test
    - run: uv sync --frozen --no-editable --group test
    - name: Run pytest with PYTHONOPTIMIZE=2
      run: pytest --color=yes
      env:
        PYTHONOPTIMIZE: 2

  pre-publish-checks:
    runs-on: ubuntu-latest
    name: pre-publication checks
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0
    - uses: astral-sh/setup-uv@1edb52594c857e2b5b13128931090f0640537287 # v5.3.0
      with:
        enable-cache: true
        prune-cache: false
        cache-suffix: pre-publish-checks

    - run: uv run scripts/pre_publish_checks.py
