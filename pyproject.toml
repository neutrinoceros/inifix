[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "inifix-cli"
version = "0.1.0"
description = "A command line interface for inifix."
authors = [
    { name = "C.M.T. Robert" },
]
requires-python = ">=3.10"
dependencies = [
    "exceptiongroup>=1.0.0", # TODO: remove when support for Python 3.10 is dropped
    "inifix==6.1.1",
    "typer-slim>=0.19.0",
]

[project.license]
text = "GPL-3.0"

[project.scripts]
inifix = "inifix_cli:app"

[dependency-groups]
test = [
    "click>=8.2.0", # required for typer.testing.CliRunner with separate stderr and stdout
    "hypothesis>=6.110.0",
    "pytest>=8.4.0",
    "runtime-introspect>=0.1.0",
    "typing-extensions>=4.13.0 ; python_full_version < '3.14'",
]
concurrency = [
    {include-group = "test"},
    "pytest-repeat>=0.9.3",
]
covcheck = [
    {include-group = "test"},
    "coverage[toml] ; python_version == '3.10'",
    "coverage>=7.10.0",
]
typecheck = [
    "basedpyright>=1.26.0",
    "mypy>=1.11.2",
    "pyright>=1.1.390",
]

[tool.uv.workspace]
members = ["lib/inifix"]

[tool.uv.sources]
inifix = { workspace = true }

[tool.ruff.lint]
exclude = ["*__init__.py"]
ignore = ["E501"]
select = [
    "E",
    "F",
    "W",
    "C4",  # flake8-comprehensions
    "B",   # flake8-bugbear
    "YTT", # flake8-2020
    "I",   # isort
    "UP",  # pyupgrade
    "RUF022" # unsorted-dunder-all
]

[tool.ruff.lint.isort]
known-first-party = ["inifix"]

[tool.coverage.run]
branch = true
source = [
    "src/inifix_cli",
    "tests",
    "lib/inifix/src",
    "lib/inifix/tests",
]
omit = [
    "src/inifix_cli/__main__.py",
    "scripts/*",
]

[tool.coverage.report]
show_missing = true
skip_covered = false

# use exclude_also to *extend* the default exclude_lines,
# and allow purely defensive code patterns
exclude_also = [
    "^\\s*raise NotImplementedError\\b",
    "^\\s*raise RuntimeError\\b",
    "^\\s*case _ as unreachable:",
]

[tool.pyright]
reportImplicitStringConcatenation = false

# allow defensive code
reportUnreachable = false
reportUnnecessaryIsInstance = false
reportUnnecessaryComparison = false

# in some instances, pyright and basedpyright may conflict over a single line,
# where e.g. pyright reports an error that I wish to ignore, but basedpyright
# complains about an unused `# pyright: ignore[...]` comment
# At the time of writing, it appears that this setting can be lifted once
# Python 3.10 is unsupported
reportUnnecessaryTypeIgnoreComment = false

[tool.mypy]
python_version = "3.10"
strict = true
show_error_codes = true
show_error_context = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[tool.pytest.ini_options]
minversion = "6.0"
filterwarnings = [
    "error",
    "ignore:assertions not in test modules or plugins will be ignored:UserWarning",
]
addopts = "-ra"
